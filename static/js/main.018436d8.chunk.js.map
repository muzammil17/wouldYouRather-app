{"version":3,"sources":["images/udacity.png","_DATA.js","actions/userAction.js","actions/authUserAction.js","actions/authenticationAction.js","components/login.js","components/questionCard.js","components/dashBoard.js","components/navbar.js","actions/questionActions.js","components/voted.js","components/page404.js","components/question.js","components/polling.js","components/addQuestion.js","components/leaderBoard.js","components/privateRoute.js","components/App.js","serviceWorker.js","reducers/authUserReducer.js","reducers/userReducers.js","reducers/questionReducer.js","reducers/authenticationReducer.js","reducers/index.js","middlewares/logger.js","middlewares/index.js","index.js"],"names":["module","exports","users","sarahedo","id","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_getUsers","Promise","res","rej","setTimeout","_saveQuestion","question","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","concat","handleGetAuthUser","user","dispatch","then","AuthUser","Object","keys","filter","one","type","authUser","catch","err","console","log","handleLogin","cb","Login","state","userName","redirectToReferer","loading","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","this","isAuthenticated","from","location","pathname","to","className","src","udactiy","height","alt","onChange","defaultValue","map","key","role","aria-hidden","onClick","Component","connect","QuestionCard","DashBoard","tab1","tab2","handleChangeTab2","handleChangeTab1","answeredQuestions","unansweredQuestions","style","marginLeft","transform","disabled","length","ques","push","bc","values","i","Array","sort","a","b","undefined","withRouter","data-toggle","data-target","aria-controls","aria-expanded","aria-label","color","handleGetQuestions","error","handleSaveAnswer","answer","getState","qid","_saveQuestionAnswer","handleSaveQuestion","saveQuestion","totalVotes","voted","width","backgroundColor","floor","fontWeight","Page404","fontSize","Question","Polling","newVote","includes","match","params","questionId","AddQuestion","data","history","marginTop","onSubmit","htmlFor","placeholder","LeaderBoard","totalQuestions","totalAnswer","score","newUsers","component","rest","render","App","path","exact","Boolean","window","hostname","authReducer","action","combineReducers","userReducer","questionReducer","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.018436d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/udacity.1fc43d1e.png\";","let users = {\r\n  sarahedo: {\r\n    id: \"sarahedo\",\r\n    name: \"Sarah Edo\",\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/sarah.jpg\",\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\r\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\r\n      am8ehyc8byjqgar0jgpub9: \"optionTwo\",\r\n      loxhs1bqm25b708cmbf3g: \"optionTwo\",\r\n    },\r\n    questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\r\n  },\r\n  tylermcginnis: {\r\n    id: \"tylermcginnis\",\r\n    name: \"Tyler McGinnis\",\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/tyler.jpg\",\r\n    answers: {\r\n      vthrdm985a262al8qx3do: \"optionOne\",\r\n      xj352vofupe1dqz9emx13r: \"optionTwo\",\r\n    },\r\n    questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\r\n  },\r\n  johndoe: {\r\n    id: \"johndoe\",\r\n    name: \"John Doe\",\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/dan.jpg\",\r\n    answers: {\r\n      xj352vofupe1dqz9emx13r: \"optionOne\",\r\n      vthrdm985a262al8qx3do: \"optionTwo\",\r\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\r\n    },\r\n    questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\r\n  },\r\n};\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: \"8xf0y6ziyjabvozdd253nd\",\r\n    author: \"sarahedo\",\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"have horrible short term memory\",\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: \"have horrible long term memory\",\r\n    },\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: \"6ni6ok3ym7mf1p33lnez\",\r\n    author: \"johndoe\",\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"become a superhero\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"johndoe\", \"sarahedo\"],\r\n      text: \"become a supervillain\",\r\n    },\r\n  },\r\n  am8ehyc8byjqgar0jgpub9: {\r\n    id: \"am8ehyc8byjqgar0jgpub9\",\r\n    author: \"sarahedo\",\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"be telekinetic\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"be telepathic\",\r\n    },\r\n  },\r\n  loxhs1bqm25b708cmbf3g: {\r\n    id: \"loxhs1bqm25b708cmbf3g\",\r\n    author: \"tylermcginnis\",\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"be a front-end developer\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"be a back-end developer\",\r\n    },\r\n  },\r\n  vthrdm985a262al8qx3do: {\r\n    id: \"vthrdm985a262al8qx3do\",\r\n    author: \"tylermcginnis\",\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: [\"tylermcginnis\"],\r\n      text: \"find $50 yourself\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"johndoe\"],\r\n      text: \"have your best friend find $500\",\r\n    },\r\n  },\r\n  xj352vofupe1dqz9emx13r: {\r\n    id: \"xj352vofupe1dqz9emx13r\",\r\n    author: \"johndoe\",\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: [\"johndoe\"],\r\n      text: \"write JavaScript\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"tylermcginnis\"],\r\n      text: \"write Swift\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction generateUID() {\r\n  return (\r\n    Math.random().toString(36).substring(2, 15) +\r\n    Math.random().toString(36).substring(2, 15)\r\n  );\r\n}\r\n\r\nexport function _getUsers() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...users }), 1000);\r\n  });\r\n}\r\n\r\nexport function _getQuestions() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...questions }), 1000);\r\n  });\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    },\r\n  };\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion,\r\n      };\r\n\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\r\n        },\r\n      };\r\n\r\n      res(formattedQuestion);\r\n    }, 1000);\r\n  });\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer,\r\n          },\r\n        },\r\n      };\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser]),\r\n          },\r\n        },\r\n      };\r\n\r\n      res();\r\n    }, 500);\r\n  });\r\n}\r\n","import { _getUsers } from \"../_DATA\";\r\n\r\nexport const GET_USERS = \"GET_USERS\";\r\n\r\nconst getUsers = (users) => ({\r\n  type: GET_USERS,\r\n  users,\r\n});\r\n\r\nexport const handleGetUser = () => (dispatch) => {\r\n  return _getUsers()\r\n    .then((res) => {\r\n      dispatch(getUsers(res));\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import { _getUsers } from \"../_DATA\";\r\n\r\nexport const GET_AUTHUSER = \"GET_AUTHUSER\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nconst authUser = (user) => {\r\n  return {\r\n    type: GET_AUTHUSER,\r\n    user,\r\n  };\r\n};\r\n\r\nexport const handleGetAuthUser = (user) => (dispatch) => {\r\n  return _getUsers()\r\n    .then((res) => {\r\n      //  console.log(res)\r\n      let AuthUser;\r\n      Object.keys(res).filter((one) => {\r\n        if (res[one].name === user) {\r\n          AuthUser = res[one];\r\n        }\r\n        return null;\r\n      });\r\n      //  console.log(AuthUser)\r\n      dispatch(authUser(AuthUser));\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const handleLogoutUser = () => {\r\n  return {\r\n    type: USER_LOGOUT,\r\n  };\r\n};\r\n","export const USER_LOGIN = \"USER_LOGIN\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nconst Login = () => {\r\n  return {\r\n    type: USER_LOGIN,\r\n  };\r\n};\r\n\r\nconst Logout = () => {\r\n  return {\r\n    type: USER_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const handleLogin = (cb) => (dispatch) => {\r\n  dispatch(Login());\r\n  setTimeout(cb, 100);\r\n};\r\n\r\nexport const handleLogout = (cb) => (dispatch) => {\r\n  dispatch(Logout());\r\n  setTimeout(cb, 100);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleGetAuthUser } from \"../actions/authUserAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport udactiy from \"../images/udacity.png\";\r\nimport { handleLogin } from \"../actions/authenticationAction\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    userName: \"\",\r\n    redirectToReferer: false,\r\n    loading: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ userName: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    this.setState({ loading: true });\r\n    e.preventDefault();\r\n    this.props.dispatch(handleGetAuthUser(this.state.userName));\r\n\r\n    this.props.dispatch(\r\n      handleLogin(this.setState({ redirectToReferer: true }))\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { users, isAuthenticated, authUser } = this.props;\r\n    const { from } = this.props.location.state || {\r\n      from: { pathname: \"/dashboard\" },\r\n    };\r\n    if (this.state.redirectToReferer) {\r\n      return <Redirect to={from} />;\r\n    }\r\n\r\n    if (authUser !== null && isAuthenticated) return <Redirect to={from} />;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"col-sm-6 offset-sm-3 my-5 py-5\">\r\n          <img\r\n            src={udactiy}\r\n            height=\"100px\"\r\n            className=\"mx-auto d-block mb-5\"\r\n            alt=\"udacity\"\r\n          />\r\n\r\n          <h2 className=\"text-center\">Would You Rather :)</h2>\r\n\r\n          <div>\r\n            <div className=\"input-group mb-3\">\r\n              <select\r\n                className=\"custom-select\"\r\n                id=\"inputGroupSelect02\"\r\n                onChange={this.handleChange}\r\n              >\r\n                <option defaultValue>Select Username</option>;\r\n                {users\r\n                  ? Object.keys(users).map((user) => {\r\n                      const { id, name } = users[user];\r\n                      return <option key={id}>{name}</option>;\r\n                    })\r\n                  : null}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              {!this.state.loading ? (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.handleSubmit}\r\n                  className=\"btn btn-dark w-50 mx-auto d-block\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-dark w-50 mx-auto d-block\"\r\n                >\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state.users,\r\n    authUser: state.authUser,\r\n    isAuthenticated: state.isAuthenticated,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst QuestionCard = ({ question, users }) => {\r\n  return (\r\n    <Link to={`/question/${question.id}`} className=\"questionCard\">\r\n      <div className=\"card mb-2\">\r\n        <div className=\"card-header\">\r\n          {/* <img\r\n                          src={users[question.author].avatarURL}\r\n                          className=\"rounded-circle\"\r\n                          height=\"75px\"\r\n                          width=\"75px\"\r\n                        /> */}\r\n          <span className=\"ml-2\">{users[question.author].name}</span>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h2>Would You Rather ?</h2>\r\n          <div>\r\n            <span>{question.optionOne.text} || </span>\r\n            <span>{question.optionTwo.text}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport QuestionCard from \"./questionCard\";\r\n\r\nclass DashBoard extends Component {\r\n  state = {\r\n    tab1: true,\r\n    tab2: false,\r\n  };\r\n\r\n  handleChangeTab2 = () => {\r\n    this.setState({ tab1: false, tab2: true });\r\n  };\r\n  handleChangeTab1 = () => {\r\n    this.setState({ tab1: true, tab2: false });\r\n  };\r\n  render() {\r\n    const { answeredQuestions, unansweredQuestions, users } = this.props;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6 offset-sm-3\">\r\n          <div\r\n            className=\"w-100 mt-4\"\r\n            style={{ marginLeft: \"50%\", transform: \"translateX(-20%)\" }}\r\n          >\r\n            <button\r\n              className=\"btn btn-dark mr-2\"\r\n              disabled={this.state.tab1}\r\n              onClick={this.handleChangeTab1}\r\n            >\r\n              Unanswered Questions\r\n            </button>\r\n\r\n            <button\r\n              className=\"btn btn-dark mr-2\"\r\n              disabled={this.state.tab2}\r\n              onClick={this.handleChangeTab2}\r\n            >\r\n              Answered Questions\r\n            </button>\r\n          </div>\r\n\r\n          {/* main content */}\r\n\r\n          {this.state.tab1 === true ? (\r\n            <div className=\"mt-3\">\r\n              {unansweredQuestions.length !== 0 ? (\r\n                unansweredQuestions.map((question) => (\r\n                  <QuestionCard\r\n                    question={question}\r\n                    users={users}\r\n                    key={question.id}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <h3>Loading...</h3>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"mt-3\">\r\n              {answeredQuestions.length !== 0 ? (\r\n                answeredQuestions.map((question) => (\r\n                  <QuestionCard\r\n                    question={question}\r\n                    users={users}\r\n                    key={question.id}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <h3>Loading...</h3>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let { authUser, questions, users } = state;\r\n  let answeredQuestions = [];\r\n\r\n  if (authUser) {\r\n    Object.keys(authUser.answers).map((id) => {\r\n      Object.keys(questions).map((ques) => {\r\n        if (ques === id) {\r\n          answeredQuestions.push(questions[ques]);\r\n          return null;\r\n        }\r\n        return null;\r\n      });\r\n      return null;\r\n    });\r\n  }\r\n\r\n  let bc = Object.values(questions);\r\n  let unansweredQuestions = [];\r\n  answeredQuestions.map((id) => {\r\n    bc.map((ques, i) => {\r\n      if (ques.id === id.id) {\r\n        delete bc[i];\r\n      }\r\n      return null;\r\n    });\r\n    return null;\r\n  });\r\n\r\n  unansweredQuestions = bc;\r\n  answeredQuestions = Array.from(answeredQuestions).sort(\r\n    (a, b) => b.timestamp - a.timestamp\r\n  );\r\n  unansweredQuestions = Array.from(unansweredQuestions).sort(\r\n    (a, b) => b.timestamp - a.timestamp\r\n  );\r\n  unansweredQuestions = unansweredQuestions.filter((a) => a !== undefined);\r\n\r\n  return {\r\n    authUser,\r\n    unansweredQuestions,\r\n    answeredQuestions,\r\n    users,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DashBoard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { handleLogoutUser } from \"../actions/authUserAction\";\r\nimport { handleLogout } from \"../actions/authenticationAction\";\r\n\r\nconst Navbar = (props) => {\r\n  function handleOnClick() {\r\n    props.dispatch(handleLogoutUser());\r\n    props.dispatch(handleLogout());\r\n  }\r\n  const { authUser } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavDropdown\"\r\n        aria-controls=\"navbarNavDropdown\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div\r\n        className=\"collapse navbar-collapse container\"\r\n        id=\"navbarNavDropdown\"\r\n      >\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item active\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item active\">\r\n            <Link className=\"nav-link\" to=\"/add\">\r\n              Add New\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item active\">\r\n            <Link className=\"nav-link\" to=\"/leaderboard\">\r\n              Leadorboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        {props.authUser !== null ? (\r\n          <div className=\"ml-auto navbar-text\">\r\n            <span className=\"mr-4\" style={{ color: \"white\" }}>\r\n              {authUser.name + \" \"}\r\n            </span>\r\n\r\n            <span style={{ color: \"white\" }} onClick={handleOnClick}>\r\n              logout\r\n            </span>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authUser: state.authUser,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Navbar));\r\n","import { _getQuestions, _saveQuestionAnswer, _saveQuestion } from \"../_DATA\";\r\n\r\nexport const GET_QUESTIONS = \"GET_QUESTIONS\";\r\nexport const SAVE_ANSWER = \"SAVE_ANSWER\";\r\nexport const SAVE_QUESTION = \"SAVE_QUESTION\";\r\n\r\nconst getQuestions = (questions) => {\r\n  return {\r\n    type: GET_QUESTIONS,\r\n    questions,\r\n  };\r\n};\r\n\r\nexport const handleGetQuestions = () => (dispatch) => {\r\n  return _getQuestions()\r\n    .then((res) => {\r\n      dispatch(getQuestions(res));\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n};\r\n\r\nconst saveAnswer = ({ authedUser, qid, answer, authUser }) => ({\r\n  type: SAVE_ANSWER,\r\n  authedUser,\r\n  qid,\r\n  answer,\r\n  authUser,\r\n});\r\n\r\nexport const handleSaveAnswer = (answer) => (dispatch, getState) => {\r\n  const { authUser } = getState();\r\n  dispatch(saveAnswer({ ...answer, authUser }));\r\n  return _saveQuestionAnswer(answer).catch((err) => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst saveQuestion = (question) => ({\r\n  type: SAVE_QUESTION,\r\n  question,\r\n});\r\n\r\nexport const handleSaveQuestion = (question) => (dispatch) => {\r\n  return _saveQuestion(question)\r\n    .then((res) => {\r\n      dispatch(saveQuestion(res));\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\"\r\n\r\nconst Voted = (props) => {\r\n  const { users, authUser, question, optionOne, optionTwo, totalVotes } = props;\r\n  let voted = authUser.answers[question.id];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 offset-sm-3\">\r\n            <div className=\"card mt-3\">\r\n              <div className=\"card-header\">\r\n                <img\r\n                  src={users ? users[question.author].avatarURL : null}\r\n                  className=\"rounded-circle\"\r\n                  height=\"75px\"\r\n                  width=\"75px\"\r\n                  alt=\"user\"\r\n                />\r\n                <span className=\"ml-2\">\r\n                  {users ? users[question.author].name : null}\r\n                </span>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <h3>Would You Rather ?</h3>\r\n                <h5 className=\"text-center mt-3\">Votes</h5>\r\n                <div className=\"mt-3\">\r\n                  <span className=\"float-left\">Total Votes</span>\r\n                  <span\r\n                    className=\"float-right rounded-circle px-2 py-1\"\r\n                    style={{ backgroundColor: \"red\", color: \"white\" }}\r\n                  >\r\n                    {totalVotes}\r\n                  </span>\r\n                </div>{\" \"}\r\n                <br />\r\n                <div className=\"mt-3\">\r\n                  <span className=\"float-left\">\r\n                    {question.optionOne.text}\r\n                    {voted === \"optionOne\" ? (\r\n                      <i className=\"fas fa-check-circle text-success ml-2\"></i>\r\n                    ) : null}\r\n                  </span>\r\n                  <div className=\"float-right\">\r\n                    <span className=\"mr-2\">\r\n                      {Math.floor((optionOne / totalVotes) * 100)}%\r\n                    </span>\r\n                    <span\r\n                      className=\"rounded-circle px-2 py-1\"\r\n                      style={{ backgroundColor: \"red\", color: \"white\" }}\r\n                    >\r\n                      {optionOne}\r\n                    </span>\r\n                  </div>\r\n                </div>{\" \"}\r\n                <br />\r\n                <div className=\"mt-3\">\r\n                  <span className=\"float-left\">\r\n                    {question.optionTwo.text}{\" \"}\r\n                    {voted === \"optionTwo\" ? (\r\n                      <i className=\"fas fa-check-circle text-success ml-2\"></i>\r\n                    ) : null}\r\n                  </span>\r\n                  <div className=\"float-right\">\r\n                    <span className=\"mr-2\">\r\n                      {Math.floor((optionTwo / totalVotes) * 100)}%\r\n                    </span>\r\n                    <span\r\n                      className=\"rounded-circle px-2 py-1\"\r\n                      style={{ backgroundColor: \"red\", color: \"white\" }}\r\n                    >\r\n                      {optionTwo}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-footer\">\r\n                You voted :{\" \"}\r\n                <span style={{ fontWeight: \"bold\" }}>\r\n                  {question[authUser.answers[question.id]].text}{\" \"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authUser: state.authUser,\r\n    users: state.users\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Voted);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div className=\"text-center mt-5 pt-3\">\r\n      <h1 style={{fontSize:\"190px\"}}>404</h1>\r\n      <h2>Page Not Found</h2>\r\n      <h5 className=\"mt-5 pt-2\">wanna go Home? <Link to='/dashboard'>Click here</Link></h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import React from \"react\";\r\nimport Page404 from \"./page404\";\r\n\r\nconst Question = ({ question, users, handleSubmit, handleChange }) => {\r\n\r\n  if(question === undefined) return <Page404 />\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 offset-sm-3\">\r\n            <div className=\"card mt-3\">\r\n              <div className=\"card-header\">\r\n                <img\r\n                  src={users ? users[question.author].avatarURL : null}\r\n                  className=\"rounded-circle\"\r\n                  height=\"75px\"\r\n                  width=\"75px\"\r\n                  alt=\"user\"\r\n                />\r\n                <span className=\"ml-2\">\r\n                  {users ? users[question.author].name : null}\r\n                </span>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <h3>Would You Rather ?</h3>\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        aria-label=\"Radio button for following text input\"\r\n                        id=\"optionOne\"\r\n                        name=\"vote\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <span\r\n                    className=\"form-control\"\r\n                    aria-label=\"Text input with radio button\"\r\n                  >\r\n                    {question.optionOne.text}\r\n                  </span>\r\n                </div>\r\n                <div className=\"input-group mt-2\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        aria-label=\"Radio button for following text input\"\r\n                        id=\"optionTwo\"\r\n                        name=\"vote\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <span\r\n                    className=\"form-control\"\r\n                    aria-label=\"Text input with radio button\"\r\n                  >\r\n                    {question.optionTwo.text}\r\n                  </span>\r\n                </div>\r\n                <button\r\n                  className=\"btn btn-dark w-50 mx-auto d-block mt-3\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  {\" \"}\r\n                  Submit{\" \"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { handleSaveAnswer } from \"../actions/questionActions\";\r\n\r\nimport Voted from \"./voted\";\r\nimport Question from \"./question\";\r\n\r\nclass Polling extends Component {\r\n  state = {\r\n    voted: false,\r\n    newVote: \"\",\r\n    optionOne: 0,\r\n    optionTwo: 0,\r\n    totalVotes: 0,\r\n  };\r\n  componentDidMount() {\r\n    const { question, authUser } = this.props;\r\n\r\n    let votes = question\r\n      ? question.optionOne.votes.concat(question.optionTwo.votes)\r\n      : null;\r\n    let optionOne = question ? question.optionOne.votes.length : null;\r\n    let optionTwo = question ? question.optionTwo.votes.length : null;\r\n    let totalVotes = optionTwo + optionOne;\r\n    if (votes) {\r\n      if (votes.includes(authUser.id)) {\r\n        this.setState({\r\n          voted: true,\r\n        });\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      optionOne,\r\n      optionTwo,\r\n      totalVotes,\r\n    });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ newVote: e.target.id });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { authUser, question, dispatch } = this.props;\r\n    let answer = {\r\n      authedUser: authUser.id,\r\n      qid: question.id,\r\n      answer: this.state.newVote,\r\n    };\r\n    dispatch(handleSaveAnswer(answer));\r\n\r\n    this.setState({\r\n      voted: true,\r\n      [`${answer.answer}`]: this.state[`${answer.answer}`] + 1,\r\n      totalVotes: this.state.totalVotes + 1,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { voted } = this.state;\r\n    const { question, users } = this.props;\r\n    return (\r\n      <div>\r\n        {voted ? (\r\n          <Voted\r\n            {...this.state}\r\n            // authUser={authUser}\r\n            // users={users}\r\n            question={question}\r\n          />\r\n        ) : (\r\n          <Question\r\n            question={question}\r\n            handleSubmit={this.handleSubmit}\r\n            handleChange={this.handleChange}\r\n            users={users}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  let id = props.match.params.questionId;\r\n  let question = Object.values(state.questions).filter((question) => {\r\n    if (question.id === id) return state.questions[id];\r\n\r\n    return null;\r\n  });\r\n  return {\r\n    authUser: state.authUser,\r\n    question: question[0],\r\n    users: state.users,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Polling);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleSaveQuestion } from \"../actions/questionActions\";\r\n\r\nexport class AddQuestion extends Component {\r\n  state = {\r\n    optionOne: \"\",\r\n    optionTwo: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { optionOne, optionTwo } = this.state;\r\n    let data = {\r\n      optionOneText: optionOne,\r\n      optionTwoText: optionTwo,\r\n      author: this.props.authUser.id,\r\n    };\r\n    this.props.dispatch(handleSaveQuestion(data));\r\n    this.props.history.push(\"/dashboard\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-8 offset-sm-2\" style={{ marginTop: \"100px\" }}>\r\n            <h2 className=\"text-center\">Would You Rather :)</h2>\r\n            <form className=\"mt-4\" onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"optionOne\">Option One</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"optionOne\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"option 1\"\r\n                />\r\n\r\n                <label htmlFor=\"optionTwo\" className=\"mt-3\">\r\n                  Option Two\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"optionTwo\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"option 2\"\r\n                />\r\n              </div>\r\n\r\n              <button className=\"btn btn-dark w-50 mx-auto d-block\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authUser: state.authUser,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddQuestion);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class LeaderBoard extends Component {\r\n  render() {\r\n    const { users } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-sm-8 offset-sm-2\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h3 className=\"text-center\">LeaderBoard</h3>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div>\r\n                  <h4>Would You Rather :) </h4>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col-sm-4 offset-sm-8\">\r\n                    <h4 className=\"float-right\">Score</h4>\r\n                  </div>\r\n                </div>\r\n                {users\r\n                  ? users.map((user) => (\r\n                      <div key={user.id}>\r\n                        <div className=\"row mt-2\">\r\n                          <div className=\"col-sm-2\">\r\n                            <img\r\n                              src={user ? user.avatarURL : null}\r\n                              className=\"rounded-circle\"\r\n                              height=\"75px\"\r\n                              width=\"75px\"\r\n                              alt=\"user\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-sm-9\">\r\n                            <h4>{user.name}</h4>\r\n                            <p>total questions : <b>{user.totalQuestions}</b></p>\r\n                            <p>\r\n                              total Answers : <b>{user.totalAnswer}</b>\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"col-sm-1\">\r\n                            <h5 className=\"mt-5\">{user.score}</h5>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <br />\r\n                      </div>\r\n                    ))\r\n                  : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { users, authUser } = state;\r\n  let newUsers = Object.keys(users).map((user) => {\r\n    let score =\r\n      users[user].questions.length + Object.keys(users[user].answers).length;\r\n    let totalQuestions = users[user].questions.length;\r\n    let totalAnswer = Object.keys(users[user].answers).length;\r\n    return {\r\n      ...users[user],\r\n      score,\r\n      totalQuestions,\r\n      totalAnswer,\r\n    };\r\n  });\r\n\r\n  newUsers = Array.from(newUsers).sort((a, b) => b.score - a.score);\r\n  return {\r\n    authUser,\r\n    users: newUsers,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeaderBoard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, isAuthenticated, authUser, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated === true && authUser !== null ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/\",\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.isAuthenticated,\r\n    authUser: state.authUser\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleGetUser } from \"../actions/userAction\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Login from \"./login\";\nimport DashBoard from \"./dashBoard\";\nimport Navbar from \"./navbar\";\nimport Polling from \"./polling\";\nimport AddQuestion from \"./addQuestion\";\nimport LeaderBoard from \"./leaderBoard\";\nimport Page404 from \"./page404\";\nimport PrivateRoute from \"./privateRoute\";\nimport { handleGetQuestions } from \"../actions/questionActions\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(handleGetUser());\n    this.props.dispatch(handleGetQuestions())\n  }\n  render() {\n    return (\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={Login} />\n          <PrivateRoute path=\"/dashboard\" component={DashBoard} />\n          <PrivateRoute path=\"/add\" component={AddQuestion} />\n          <PrivateRoute path=\"/question/:questionId\" component={Polling} />\n          <PrivateRoute path=\"/leaderboard\" component={LeaderBoard} />\n          <PrivateRoute component={Page404} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default connect()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_AUTHUSER, USER_LOGOUT } from \"../actions/authUserAction\";\r\nimport { SAVE_ANSWER, SAVE_QUESTION } from \"../actions/questionActions\";\r\n\r\nconst authReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case GET_AUTHUSER:\r\n      return action.user;\r\n\r\n    case SAVE_ANSWER:\r\n      let { qid, answer } = action;\r\n      return {\r\n        ...state,\r\n        answers: {\r\n          ...state.answers,\r\n          [qid]: answer,\r\n        },\r\n      };\r\n    case SAVE_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: state.questions.concat(action.question.id),\r\n      };\r\n    case USER_LOGOUT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { GET_USERS } from \"../actions/userAction\";\r\nimport { SAVE_ANSWER, SAVE_QUESTION } from \"../actions/questionActions\";\r\n\r\nconst users = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS:\r\n      return {\r\n        ...state,\r\n        ...action.users,\r\n      };\r\n    case SAVE_ANSWER:\r\n      let { authedUser, qid, answer } = action;\r\n      return {\r\n        ...state,\r\n        [authedUser]: {\r\n          ...state[authedUser],\r\n\r\n          answers: {\r\n            ...state[authedUser].answers,\r\n            [`${qid}`]: answer,\r\n          },\r\n        },\r\n      };\r\n\r\n    case SAVE_QUESTION:\r\n      return {\r\n        ...state,\r\n        [action.question.author]: {\r\n          ...state[action.question.author],\r\n          questions: state[action.question.author].questions.concat(\r\n            action.question.id\r\n          ),\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default users;\r\n","import { GET_QUESTIONS, SAVE_ANSWER, SAVE_QUESTION } from \"../actions/questionActions\";\r\n\r\nconst questions = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        ...action.questions,\r\n      };\r\n\r\n    case SAVE_ANSWER:\r\n      let { authedUser, qid, answer } = action;\r\n\r\n      return {\r\n        ...state,\r\n        [`${qid}`]: {\r\n          ...state[qid],\r\n          [`${answer}`]: {\r\n            ...state[qid][answer],\r\n            votes : state[qid][answer].votes.concat(authedUser)\r\n          }\r\n        }\r\n      };\r\n    case SAVE_QUESTION:\r\n      return {\r\n        ...state,\r\n        [action.question.id] : action.question\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default questions;\r\n","import { USER_LOGIN } from \"../actions/authenticationAction\";\r\nimport { USER_LOGOUT } from \"../actions/authUserAction\";\r\n\r\nfunction isAuthenticated (state=false, action) {\r\n  switch(action.type){\r\n    case USER_LOGIN:\r\n      return true\r\n    case USER_LOGOUT:\r\n      return false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default isAuthenticated","import { combineReducers } from \"redux\";\r\n\r\nimport authReducer from \"./authUserReducer\";\r\nimport userReducer from \"./userReducers\";\r\nimport questionReducer from \"./questionReducer\";\r\nimport isAuthenticated from \"./authenticationReducer\";\r\n\r\nexport default combineReducers({\r\n  authUser: authReducer,\r\n  users: userReducer,\r\n  questions: questionReducer,\r\n  isAuthenticated,\r\n});\r\n","const logger = (store) => (next) => (action) => {\r\n  console.group(action.type);\r\n  console.log(\"action\", action);\r\n  const returnValue = next(action);\r\n  console.log(\"new state\", store.getState());\r\n  console.groupEnd();\r\n\r\n  return returnValue;\r\n};\r\n\r\nexport default logger\r\n","import { applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport logger from \"./logger\"\r\n\r\nexport default applyMiddleware(thunk, logger)","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport middleware from \"./middlewares\";\n\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}